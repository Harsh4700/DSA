class BinaryTreeNode:
    def __init__(self,data):
        self.data=data
        self.left=None
        self.right=None
def printTreeDetailed(root):
    if root == None:
        return
    print(root.data,end=" ")
    if root.left!=None:
        print("L",root.left.data,end=" ")
    if root.right!=None:
        print("R",root.right.data,end=" ")
    print()
    printTreeDetailed(root.left)
    printTreeDetailed(root.right)
import queue
def takelevelwiseTreeinput():
    q=queue.Queue()
    print("enter root")
    rootdata=int(input())
    if (rootdata == -1):
        return None
    root=BinaryTreeNode(rootdata)
    q.put(root)
    while (not(q.empty())):
        current_node=q.get()
        print("Enter left child of",current_node.data)
        leftChildData=int(input())
        if leftChildData !=-1:
            leftChild=BinaryTreeNode(leftChildData)
            current_node.data=leftChild
            q.put(leftChild)
            
        print("Enter right child of",current_node.data)
        rightChildData=int(input())
        if rightChildData !=-1:
            rightChild=BinaryTreeNode(rightChildData)
            current_node.data=rightChild
            q.put(rightChild)
    return root 
root=takelevelwiseTreeinput()
printTreeDetailed(root)
