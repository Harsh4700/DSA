class ListNode:
    def __init__(self,val=0,next=None):
        self.val=val
        self.next=next
def is_palindrome(head):
    if not head or not head.next:
        return True
    slow=head
    fast=head
    while fast.next and fast.next.next:
        slow=slow.next
        fast=fast.next.next
    second_half=reverse_linked_list(slow.next)
    curr1=head
    curr2=second_half
    while curr2:
        if curr1.val!=curr2.val:
            return False
        curr1=curr1.next
        curr2=curr2.next
    return True
def reverse_linked_list(head):
    prev=None
    curr=head
    while curr:
        next_node=curr.next
        curr.next=prev
        prev=curr
        curr=next_node
    return prev
head = ListNode(1)
head.next = ListNode(2)
head.next.next = ListNode(3)
head.next.next.next = ListNode(2)
head.next.next.next.next = ListNode(1)
if is_palindrome(head):
    print("The linked list is a palindrome.")
else:
    print("The linked list is not a palindrome.")
    
